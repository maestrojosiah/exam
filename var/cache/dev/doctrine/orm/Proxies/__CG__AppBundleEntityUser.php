<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \AppBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'fName', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'lName', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'username', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'plainPassword', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'active', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'subjects', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'classes', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'childSubjects', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'configs', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'examCompanies', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'students', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'scores', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'scoreChildren'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'fName', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'lName', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'username', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'plainPassword', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'active', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'subjects', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'classes', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'childSubjects', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'configs', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'examCompanies', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'students', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'scores', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'scoreChildren'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFName($fName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFName', [$fName]);

        return parent::setFName($fName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFName', []);

        return parent::getFName();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function setLName($lName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLName', [$lName]);

        return parent::setLName($lName);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlainPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlainPassword', []);

        return parent::getPlainPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlainPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlainPassword', [$password]);

        return parent::setPlainPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getLName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLName', []);

        return parent::getLName();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', []);

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', []);

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', []);

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function addSubject(\AppBundle\Entity\Subject $subject)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubject', [$subject]);

        return parent::addSubject($subject);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubject(\AppBundle\Entity\Subject $subject)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubject', [$subject]);

        return parent::removeSubject($subject);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubjects()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubjects', []);

        return parent::getSubjects();
    }

    /**
     * {@inheritDoc}
     */
    public function addClass(\AppBundle\Entity\Classs $class)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addClass', [$class]);

        return parent::addClass($class);
    }

    /**
     * {@inheritDoc}
     */
    public function removeClass(\AppBundle\Entity\Classs $class)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeClass', [$class]);

        return parent::removeClass($class);
    }

    /**
     * {@inheritDoc}
     */
    public function getClasses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClasses', []);

        return parent::getClasses();
    }

    /**
     * {@inheritDoc}
     */
    public function addChildSubject(\AppBundle\Entity\ChildSubject $childSubject)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChildSubject', [$childSubject]);

        return parent::addChildSubject($childSubject);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChildSubject(\AppBundle\Entity\ChildSubject $childSubject)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChildSubject', [$childSubject]);

        return parent::removeChildSubject($childSubject);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildSubjects()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildSubjects', []);

        return parent::getChildSubjects();
    }

    /**
     * {@inheritDoc}
     */
    public function addConfig(\AppBundle\Entity\Config $config)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConfig', [$config]);

        return parent::addConfig($config);
    }

    /**
     * {@inheritDoc}
     */
    public function removeConfig(\AppBundle\Entity\Config $config)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeConfig', [$config]);

        return parent::removeConfig($config);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfigs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfigs', []);

        return parent::getConfigs();
    }

    /**
     * {@inheritDoc}
     */
    public function addExamCompany(\AppBundle\Entity\ExamCompany $examCompany)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExamCompany', [$examCompany]);

        return parent::addExamCompany($examCompany);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExamCompany(\AppBundle\Entity\ExamCompany $examCompany)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExamCompany', [$examCompany]);

        return parent::removeExamCompany($examCompany);
    }

    /**
     * {@inheritDoc}
     */
    public function getExamCompanies()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExamCompanies', []);

        return parent::getExamCompanies();
    }

    /**
     * {@inheritDoc}
     */
    public function addStudent(\AppBundle\Entity\Student $student)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStudent', [$student]);

        return parent::addStudent($student);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStudent(\AppBundle\Entity\Student $student)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStudent', [$student]);

        return parent::removeStudent($student);
    }

    /**
     * {@inheritDoc}
     */
    public function getStudents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStudents', []);

        return parent::getStudents();
    }

    /**
     * {@inheritDoc}
     */
    public function addScore(\AppBundle\Entity\Score $score)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addScore', [$score]);

        return parent::addScore($score);
    }

    /**
     * {@inheritDoc}
     */
    public function removeScore(\AppBundle\Entity\Score $score)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeScore', [$score]);

        return parent::removeScore($score);
    }

    /**
     * {@inheritDoc}
     */
    public function getScores()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScores', []);

        return parent::getScores();
    }

    /**
     * {@inheritDoc}
     */
    public function addScoreChild(\AppBundle\Entity\ScoreChild $scoreChild)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addScoreChild', [$scoreChild]);

        return parent::addScoreChild($scoreChild);
    }

    /**
     * {@inheritDoc}
     */
    public function removeScoreChild(\AppBundle\Entity\ScoreChild $scoreChild)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeScoreChild', [$scoreChild]);

        return parent::removeScoreChild($scoreChild);
    }

    /**
     * {@inheritDoc}
     */
    public function getScoreChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScoreChildren', []);

        return parent::getScoreChildren();
    }

}
